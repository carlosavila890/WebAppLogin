@using bd.webappth.web.Helpers
@model bd.webapplogin.entidades.ViewModels.CambiarContrasenaViewModel
@{
    ViewBag.PageId = "extr-page";
}
<div id="content" class="container center-block">
    <div class="row">
        <div class="col-xs-offset-3 col-sm-offset-3 col-md-12 col-lg-6">
            <div class="well no-padding">
                <form action="@Url.Action("CambiarContrasena", "Homes")" method="POST" id="smart-form-register" class="smart-form client-form">
                    <header>
                        <i class="fa-fw fa fa-key"></i>  Cambiar contrase&ntilde;a
                    </header>
                    @Html.AntiForgeryToken()
                    @Html.ValidationBootstrap()
                    <fieldset>
                       
                        <section>
                            <label class="label">@Html.DisplayNameFor(model => model.ContrasenaActual)</label>
                            <label class="input">
                                <i class="icon-append fa fa-lock"></i>
                                <input type="password" asp-for="ContrasenaActual" placeholder="@Html.DisplayNameFor(model => model.ContrasenaActual)" autocomplete="off" >
                                <b class="tooltip tooltip-bottom-right"><i class="fa-fw fa fa-key"></i>Ingrese la contrase&ntilde;a actual</b>
                            </label>
                        </section>
                        <section>
                            <label class="label">@Html.DisplayNameFor(model => model.NuevaContrasena)</label>
                            <label class="input">
                                <i class="icon-append fa fa-lock"></i>
                                <input type="password" asp-for="NuevaContrasena" placeholder="@Html.DisplayNameFor(model => model.NuevaContrasena)" id="password" autocomplete="off">
                                <b class="tooltip tooltip-bottom-right"><i class="fa-fw fa fa-key"></i>Ingrese la nueva contrase&ntilde;a</b>
                            </label>
                        </section>
                        <section>
                            <label class="label">@Html.DisplayNameFor(model => model.ConfirmacionContrasena)</label>
                            <label class="input">
                                <i class="icon-append fa fa-lock"></i>
                                <input type="password" asp-for="ConfirmacionContrasena" placeholder="@Html.DisplayNameFor(model => model.ConfirmacionContrasena)" autocomplete="off">
                                <b class="tooltip tooltip-bottom-right"><i class="fa-fw fa fa-key"></i>Ingrese la confirmaci&oacute;n de la nueva contrase&ntilde;a</b>
                            </label>
                        </section>
                    </fieldset>
                    <footer>
                        <input type="submit" value="Confirmar" class="btn btn-primary"/>
                        <a asp-action="Menu" class="btn btn-default">Cancelar</a>
                    </footer>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">
        // Model i agree button
        $("#i-agree").click(function () {
            var $this = $("#terms");
            if ($this.checked) {
                $('#myModal').modal('toggle');
            } else {
                $this.prop('checked', true);
                $('#myModal').modal('toggle');
            }
        });

        // Validation
        $(function () {
            // Validation
            $("#smart-form-register").validate({
                // Rules for form validation
                rules: {
                    email: {
                        required: true,
                        email: true
                    },
                    emailConfirm: {
                        required: true,
                        email: true,
                        equalTo: '#email'
                    },
                    password: {
                        required: true,
                        minlength: 4,
                        maxlength: 20
                    },
                    passwordConfirm: {
                        required: true,
                        minlength: 4,
                        maxlength: 20,
                        equalTo: '#password'
                    },
                    firstname: {
                        required: false
                    },
                    lastname: {
                        required: false
                    },
                    gender: {
                        required: false
                    },
                    terms: {
                        required: true
                    }
                },

                // Messages for form validation
                messages: {
                    email: {
                        required: 'Please enter your email address',
                        email: 'Please enter a VALID email address'
                    },
                    emailConfirm: {
                        required: 'Please enter your email address one more time',
                        email: 'Please enter a VALID email address',
                        equalTo: 'Please enter the same email address as above'
                    },
                    password: {
                        required: 'Please enter your password'
                    },
                    passwordConfirm: {
                        required: 'Please enter your password one more time',
                        equalTo: 'Please enter the same password as above'
                    },
                    terms: {
                        required: 'You must agree with Terms and Conditions'
                    }
                },

                // Do not change code below
                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                }
            });
        });
    </script>
}